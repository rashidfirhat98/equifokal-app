name: Auto Delete Merged Branches and Vercel Previews

on:
  pull_request:
    types: [closed]

jobs:
  cleanup:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Delete merged branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME=${{ github.event.pull_request.head.ref }}
          if [[ "$BRANCH_NAME" != "main" && "$BRANCH_NAME" != "master" ]]; then
            echo "Deleting GitHub branch: $BRANCH_NAME"
            curl -X DELETE -H "Authorization: token $GH_TOKEN" \
              https://api.github.com/repos/${{ github.repository }}/git/refs/heads/$BRANCH_NAME
          else
            echo "Skipping deletion of protected branch: $BRANCH_NAME"
          fi

      - name: Delete Vercel Preview Deployment
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          BRANCH_NAME=${{ github.event.pull_request.head.ref }}
          if [[ "$BRANCH_NAME" != "main" && "$BRANCH_NAME" != "master" ]]; then
            echo "Looking for Vercel deployments from branch: $BRANCH_NAME"

            DEPLOYMENTS=$(curl -s -H "Authorization: Bearer $VERCEL_TOKEN" \
              "https://api.vercel.com/v6/deployments?projectId=$VERCEL_PROJECT_ID&meta-gitBranch=$BRANCH_NAME")

            IDS=$(echo "$DEPLOYMENTS" | jq -r '.deployments[].uid')

            if [ -z "$IDS" ]; then
              echo "No Vercel deployments found for branch: $BRANCH_NAME"
            else
              for ID in $IDS; do
                echo "Deleting Vercel deployment: $ID"
                curl -X DELETE \
                  -H "Authorization: Bearer $VERCEL_TOKEN" \
                  https://api.vercel.com/v13/deployments/$ID
              done
            fi
          else
            echo "Skipping Vercel deployment deletion for protected branch: $BRANCH_NAME"
          fi
